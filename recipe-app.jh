entity Recipes {
    discription String,
	preTime Integer,
    cookTimes Integer,
    servings Integer,
    sources String,
    url String,
    directions String,
    difficulty String,
    image Byte   
    
}

entity Category {
	categoryName String
}

/**
 * Task entity.
 * @author The JHipster team.
 */
entity Ingredient {
	discription String,
	amount BigDecimal
}

entity unitOfMeasure {
	uom String
}

entity Notes {
	notes String,
	
}



enum Difficulty {
    EASY, MODERATE, HARD
}

relationship OneToOne {
	notes{String} to notes
}

relationship ManyToMany {
	Category{task(title)} to Task{job}
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Ingredient to discription{BigDecimal},
	/**
	* A relationship
	*/
	Amount to
	/**
	* Another side of the same relationship
	*/
	BigDecimal{department}
}

relationship ManyToOne {
	Employee{manager} to Employee
}
/ defining multiple oneToOne relationships
relationship OneToOne {
	JobHistory{job} to Job,
	JobHistory{department} to Department,
	JobHistory{employee} to Employee
}

// Set pagination options
paginate JobHistory, Employee with infinite-scroll
paginate Job with pagination

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Employee, Job

// Set an angular suffix
// angularSuffix * with mySuffix
